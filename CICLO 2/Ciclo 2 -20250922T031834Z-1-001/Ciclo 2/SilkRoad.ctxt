#BlueJ class context
comment0.target=SilkRoad
comment0.text=\r\n\ SilkRoad\:\ clase\ principal\ del\ simulador.\r\n\ Gestiona\ tiendas\ (Store),\ robots\ (Robot),\ la\ barra\ de\ progreso\ (ProgressBar)\ y\ el\ lienzo\ (Canvas).\r\n\ Permite\ colocar/eliminar\ tiendas\ y\ robots,\ mover\ robots,\ consultar\ ganancias,\r\n\ reiniciar\ la\ simulaci\u00F3n\ y\ mostrar/ocultar\ elementos\ gr\u00E1ficos.\r\n\r\n\ @param\ length\ longitud\ l\u00F3gica\ de\ la\ carretera\ SilkRoad.\r\n
comment1.params=length
comment1.target=SilkRoad(int)
comment1.text=\r\n\ Constructor\ de\ SilkRoad.\r\n
comment10.params=location
comment10.target=void\ placeRobot(int)
comment10.text=\r\n\ Coloca\ un\ robot\ en\ la\ ubicaci\u00F3n\ indicada.\ Los\ robots\ deben\ empezar\ en\ ubicaciones\ distintas.\r\n\r\n\ @param\ location\ ubicaci\u00F3n\ l\u00F3gica\ donde\ se\ coloca\ el\ robot.\r\n
comment11.params=location
comment11.target=void\ removeRobot(int)
comment11.text=\r\n\ Elimina\ un\ robot\ localizado\ en\ la\ ubicaci\u00F3n\ indicada.\ Si\ hay\ varios,\ elimina\ el\ de\ menor\ arrivalOrder.\r\n\r\n\ @param\ location\ ubicaci\u00F3n\ l\u00F3gica\ donde\ se\ busca\ el\ robot\ a\ eliminar.\r\n
comment12.params=location\ meters
comment12.target=void\ moveRobot(int,\ int)
comment12.text=\r\n\ Mueve\ un\ robot\ que\ se\ encuentre\ en\ la\ ubicaci\u00F3n\ `location`\ la\ cantidad\ `meters`.\r\n\ Aplica\ el\ coste\ de\ movimiento\ a\ las\ ganancias,\ actualiza\ mapas\ y\ recoge\ tenges\ si\ llega\ a\ una\ tienda.\r\n\r\n\ @param\ location\ ubicaci\u00F3n\ l\u00F3gica\ actual\ del\ robot\ a\ mover.\r\n\ @param\ meters\ desplazamiento\ en\ metros\ (positivo\ o\ negativo).\r\n
comment13.params=r\ meters
comment13.target=Robot\ updateRobotLocationAfterMove(Robot,\ int)
comment13.text=\r\n\ Actualiza\ la\ ubicaci\u00F3n\ l\u00F3gica\ del\ robot\ tras\ un\ movimiento.\r\n\ En\ la\ implementaci\u00F3n\ actual\ Robot.moveByMeters\ ya\ actualiza\ la\ ubicaci\u00F3n,\r\n\ por\ lo\ que\ este\ m\u00E9todo\ simplemente\ devuelve\ el\ robot.\r\n\r\n\ @param\ r\ robot\ a\ actualizar.\r\n\ @param\ meters\ metros\ movidos.\r\n\ @return\ el\ mismo\ robot\ (con\ ubicaci\u00F3n\ ya\ actualizada).\r\n
comment14.params=
comment14.target=void\ resupplyStores()
comment14.text=\r\n\ Reabastece\ todas\ las\ tiendas\ (las\ deja\ con\ sus\ tenges\ iniciales).\r\n
comment15.params=
comment15.target=void\ returnRobots()
comment15.text=\r\n\ Regresa\ todos\ los\ robots\ a\ sus\ ubicaciones\ iniciales\ (visual\ y\ l\u00F3gicamente)\ y\ reconstruye\ robotsMap.\r\n
comment16.params=
comment16.target=void\ reboot()
comment16.text=\r\n\ Reinicia\ la\ simulaci\u00F3n\:\ reabastece\ tiendas,\ pone\ ganancias\ a\ 0\ y\ reposiciona\ robots\ a\ sus\ iniciales.\r\n
comment17.params=
comment17.target=int\ porfit()
comment17.text=\r\n\ Devuelve\ la\ ganancia\ actual\ de\ la\ simulaci\u00F3n.\r\n\ @return\ ganancia\ acumulada\ (puede\ ser\ negativa\ si\ hubo\ costes).\r\n
comment18.params=
comment18.target=int[][]\ stores()
comment18.text=\r\n\ Devuelve\ un\ arreglo\ de\ tiendas\ actuales\ ordenado\ por\ ubicaci\u00F3n.\r\n\ Cada\ entrada\ es\ {ubicaci\u00F3n,\ tenges}.\r\n\ @return\ matriz\ con\ tiendas\ y\ tenges.\r\n
comment19.params=
comment19.target=int[][]\ robots()
comment19.text=\r\n\ Devuelve\ un\ arreglo\ de\ robots\ actuales\ ordenado\ por\ ubicaci\u00F3n.\r\n\ Cada\ entrada\ es\ {ubicaci\u00F3n,\ 0}\ (el\ segundo\ campo\ es\ reservado\ para\ compatibilidad).\r\n\ @return\ matriz\ con\ robots.\r\n
comment2.params=
comment2.target=java.lang.String\ nextColorForRobot()
comment2.text=\r\n\ Obtiene\ el\ siguiente\ color\ para\ asignar\ a\ un\ robot\ en\ ciclo.\r\n\ @return\ color\ en\ forma\ de\ cadena.\r\n
comment20.params=
comment20.target=int\ sumInitialTenges()
comment20.text=\r\n\ Suma\ los\ tenges\ iniciales\ de\ todas\ las\ tiendas\ (\u00FAtil\ para\ la\ barra\ de\ progreso).\r\n\ @return\ suma\ de\ tenges\ iniciales\ (al\ menos\ 1).\r\n
comment21.params=days
comment21.target=SilkRoad\ createFromDays(int[][])
comment21.text=\r\n\ Crear\ la\ ruta\ a\ partir\ de\ un\ arreglo\ de\ d\u00EDas.\r\n\ days[i]\ \=\ {ubicaci\u00F3n,\ tenges}\r\n\r\n\ @param\ days\ arreglo\ de\ d\u00EDas\ donde\ cada\ elemento\ es\ {ubicaci\u00F3n,\ tenges}.\r\n\ @return\ la\ misma\ instancia\ de\ SilkRoad\ (permite\ encadenar\ llamadas).\r\n
comment22.params=
comment22.target=void\ moveRobots()
comment22.text=\r\n\ Mover\ los\ robots\ buscando\ maximizar\ ganancias.\r\n\ Cada\ robot\ se\ mueve\ hacia\ la\ tienda\ que\ le\ da\ mayor\ beneficio\ (tenges\ -\ distancia).\r\n\ Actualiza\ ganancias\ y\ visualmente\ parpadea\ el\ robot\ con\ mayor\ ganancia.\r\n
comment23.params=
comment23.target=int[][]\ emptiedStores()
comment23.text=\r\n\ Consultar\ el\ n\u00FAmero\ de\ veces\ que\ cada\ tienda\ ha\ sido\ desocupada,\r\n\ ordenadas\ por\ ubicaci\u00F3n\ de\ menor\ a\ mayor.\r\n\ Devuelve\:\ [[location,\ timesEmptied],\ ...]\r\n\r\n\ @return\ matriz\ con\ {ubicaci\u00F3n,\ vecesVac\u00EDa}\ por\ tienda.\r\n
comment24.params=
comment24.target=int[][]\ profitPerMove()
comment24.text=\r\n\ Consultar\ las\ ganancias\ por\ movimiento\ de\ cada\ robot,\r\n\ ordenadas\ por\ ubicaci\u00F3n\ de\ menor\ a\ mayor.\r\n\ Devuelve\:\ [[location,\ profit1,\ profit2,\ ...],\ ...]\r\n\r\n\ @return\ matriz\ con\ ganancias\ por\ robot\ (actualmente\ usa\ la\ ganancia\ global\ como\ aproximaci\u00F3n).\r\n
comment3.params=
comment3.target=java.lang.String\ nextColorForStore()
comment3.text=\r\n\ Obtiene\ el\ siguiente\ color\ para\ asignar\ a\ una\ tienda\ en\ ciclo.\r\n\ @return\ color\ en\ forma\ de\ cadena.\r\n
comment4.params=
comment4.target=void\ makeVisible()
comment4.text=\r\n\ Hace\ visible\ la\ simulaci\u00F3n\:\ muestra\ el\ lienzo,\ la\ barra\ de\ progreso,\r\n\ y\ dibuja\ tiendas\ y\ robots\ en\ sus\ posiciones\ mapeadas.\r\n
comment5.params=
comment5.target=void\ makeInvisible()
comment5.text=\r\n\ Oculta\ la\ simulaci\u00F3n\:\ oculta\ tiendas,\ robots\ y\ la\ barra\ de\ progreso.\r\n
comment6.params=
comment6.target=void\ finish()
comment6.text=\r\n\ Finaliza\ la\ simulaci\u00F3n\ y\ oculta\ el\ lienzo.\r\n
comment7.params=
comment7.target=boolean\ ok()
comment7.text=\r\n\ Indica\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa.\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ termin\u00F3\ OK,\ false\ si\ hubo\ error.\r\n
comment8.params=location\ tenges
comment8.target=void\ placeStore(int,\ int)
comment8.text=\r\n\ Coloca\ una\ tienda\ en\ la\ ubicaci\u00F3n\ indicada\ con\ la\ cantidad\ de\ tenges\ dada.\r\n\ Si\ la\ ubicaci\u00F3n\ ya\ est\u00E1\ ocupada\ por\ otra\ tienda\ o\ por\ robots,\ la\ operaci\u00F3n\ falla.\r\n\r\n\ @param\ location\ ubicaci\u00F3n\ l\u00F3gica\ donde\ colocar\ la\ tienda.\r\n\ @param\ tenges\ cantidad\ de\ tenges\ iniciales\ de\ la\ tienda.\r\n
comment9.params=location
comment9.target=void\ removeStore(int)
comment9.text=\r\n\ Elimina\ la\ tienda\ en\ la\ ubicaci\u00F3n\ indicada.\ Si\ no\ existe,\ marca\ error.\r\n\r\n\ @param\ location\ ubicaci\u00F3n\ l\u00F3gica\ de\ la\ tienda\ a\ eliminar.\r\n
numComments=25
